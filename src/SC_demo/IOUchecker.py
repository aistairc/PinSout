
import Point_sort as rs
import Point_sort2 as rs2
from plyfile import PlyData, PlyElement
import numpy as np
import pcl
from shapely.geometry import Polygon
from shapely.geometry import box
import os

BASE_DIR = os.path.dirname(os.path.abspath(__file__))
ROOT_DIR = os.path.dirname(BASE_DIR)
ROOT_DIR2 = os.path.dirname(ROOT_DIR)

def dist(p1, p2):

    return (p1[0] - p2[0]) * (p1[0] - p2[0]) + (p1[1] - p2[1]) * (p1[1] - p2[1])


def ccw(p1, p2, p3):

    cross_product = (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p3[0] - p1[0]) * (p2[1] - p1[1])

    if cross_product > 0:
        return 1

    elif cross_product < 0:
        return -1
    else:
        return 0


def get_IntersectionPoint(original_line, new_line):
    p1 = original_line[0]
    p2 = original_line[1]
    p3 = new_line[0]
    p4 = new_line[1]
    rect = []
    x = ((p1[0] * p2[1] - p1[1] * p2[0]) * (p3[0] - p4[0]) - (p1[0] - p2[0]) * (p3[0] * p4[1] - p3[1] * p4[0])) / (
                (p1[0] - p2[0]) * (p3[1] - p4[1]) - (p1[1] - p2[1]) * (p3[0] - p4[0]))

    y = ((p1[0] * p2[1] - p1[1] * p2[0]) * (p3[1] - p4[1]) - (p1[1] - p2[1]) * (p3[0] * p4[1] - p3[1] * p4[0])) / (
                (p1[0] - p2[0]) * (p3[1] - p4[1]) - (p1[1] - p2[1]) * (p3[0] - p4[0]))

    rect.append(x)
    rect.append(y)

    return rect

def Max(a, b):

    return a if a > b else b

def Min(a, b):

    return a if a < b else b

def check_PolygonInOut(p1, check_points):

    rect = 0

    for check_i in range(len(check_points)-1):

        if ccw(check_points[check_i], check_points[check_i+1], p1) == 0:
            min_x = Min(check_points[check_i][0], check_points[check_i+1][0])
            min_y = Min(check_points[check_i][1], check_points[check_i+1][1])
            max_x = Max(check_points[check_i][0], check_points[check_i+1][0])
            max_y = Max(check_points[check_i][1], check_points[check_i+1][1])

            if ((min_x <= p1[0] and p1[0] <= max_x) and (min_y <= p1[1] and p1[1] <= max_y)):
                return 1


    outside_point = []
    outside_point.append(1.0)
    outside_point.append(1234567.0)

    outside_line = []
    outside_line.append(outside_point)
    outside_line.append(p1)

    for check_i in range(len(check_points) - 1):
        check_line = []
        check_line.append(check_points[check_i])
        check_line.append(check_points[check_i+1])
        rect = rect + get_LineIntersection(outside_line, check_line)


    rect = rect % 2.0

    return rect

def get_PolygonArea(intersection_points):

    rect = 0.0

    for i in range(len(intersection_points) - 1):

        rect = rect + (intersection_points[i][0] * intersection_points[i+1][1]) - (intersection_points[i][1] * intersection_points[i+1][0])

    rect = rect if rect > 0 else -rect

    return rect / 2.0



def get_LineIntersection(original_line, new_line):

    l1_l2 = ccw(original_line[0], original_line[1], new_line[0]) * ccw(original_line[0], original_line[1], new_line[1])
    l2_l1 = ccw(new_line[0], new_line[1], original_line[0]) * ccw(new_line[0], new_line[1], original_line[1])

    return (l1_l2 < 0) and (l2_l1 < 0)


def get_intersection(original_points, new_points):

    intersection_points = []


    for original_i in range(len(original_points)-1):
        original_line = []
        original_line.append(original_points[original_i])
        original_line.append(original_points[original_i + 1])

        for new_i in range(len(new_points)-1):
            new_line = []
            new_line.append(new_points[new_i])
            new_line.append(new_points[new_i + 1])

            if get_LineIntersection(original_line, new_line):

                intersection_points.append(get_IntersectionPoint(original_line, new_line))

    for original_i in range(len(original_points)-1):

        if check_PolygonInOut(original_points[original_i], new_points):
            intersection_points.append(original_points[original_i])

    for new_i in range(len(new_points) - 1):

        if check_PolygonInOut(new_points[new_i], original_points):
            intersection_points.append(new_points[new_i])

    if len(intersection_points) > 3:
        if check_closed(intersection_points) == -1:

            intersection_points = rs2.CalculateCentroid2D(intersection_points)

        rect = get_PolygonArea(intersection_points)

        return rect
    else:
        return -1


def get_IOU(original_points, new_points):


    intersection_area = get_intersection(original_points, new_points)
    if intersection_area != -1:

        # original_area = get_PolygonArea(original_points)
        # new_area = get_PolygonArea(new_points)
        # union_area = original_area + new_area - intersection_area
        # rect = intersection_area / union_area


        original_area2 = Polygon(original_points)
        new_area2 = Polygon(new_points)
        intersection_area2 = original_area2.intersection(new_area2)
        union_area2 = original_area2.area + new_area2.area - intersection_area2.area
        rect2 = intersection_area2.area / union_area2

        return [original_area2.area, new_area2.area, intersection_area2.area, rect2]
    else:
        return -1


###################################

def check_closed(point_list):

    point_list_len = len(point_list) - 1

    if (point_list[0][0] != point_list[point_list_len][0]) or (point_list[0][1] != point_list[point_list_len][1]):
        # print "Last vertex and first vertex are not connected."
        return -1
    else:
        # print "Last vertex and first vertex are connected."
        return 1
def get_range(point_cloud, e=0.0):
    """Making the bouning box information

        Finding the Minimum and Maximum points of X, Y and Z
        and add the epsilon value
    Args:
        point_cloud: PointCloud data
        e: Epsilon value

    Returns:
        [point_max2, point_min2]: Minimum and Maximum points of X, Y and Z
    """
    ''' 0.1 10cm'''
    point_max = np.amax(point_cloud, axis=0)[0:3]
    point_min = np.amin(point_cloud, axis=0)[0:3]

    point_max2 = point_max + np.asarray([e, e, 0.0])
    point_min2 = point_min - np.asarray([e, e, 0.0])
    # point_max = np.amax(np.asarray(point_cloud), axis=0)[0:3]
    # point_min = np.amin(np.asarray(point_cloud), axis=0)[0:3]
    #
    # point_max2 = np.asarray(point_max) + np.asarray([e, e, 0.0])
    # point_min2 = np.asarray(point_min) - np.asarray([e, e, 0.0])

    return [point_max2, point_min2]
def check_bbox(main_bbox, other_bbox):
    """Check if the bounding box intersects

        Check if the bounding box intersects using the min and max points of the bounding box.

    Args:
        main_bbox: Information of main bounding box
        other_bbox: Information of other bounding box

    Returns:
        True: Bounding boxes intersect
        False: Bounding boxes are not intersect
    """
    m_minX = main_bbox[1][0] - 0.5
    m_minY = main_bbox[1][1] - 0.5
    m_maxX = main_bbox[0][0] + 0.5
    m_maxY = main_bbox[0][1] + 0.5


    s_minX = other_bbox[1][0]
    s_minY = other_bbox[1][1]
    s_maxX = other_bbox[0][0]
    s_maxY = other_bbox[0][1]

    m_box = box(m_minX, m_minY, m_maxX, m_maxY)
    s_box = box(s_minX, s_minY, s_maxX, s_maxY)

    return m_box.intersects(s_box)





if __name__ == '__main__':


    list_original = ["a_01","a_02","a_03","a_04",
                     "b_01","b_02","b_03","b_04",
                     "b_05","b_06","b_07","b_08",
                     "b_09","b_10",
                     "c_01","c_02","c_03","c_04"]
    # "/home/dprt/Documents/dprt/pointnet_data/3dModelPLY/test/"
    test_path = ROOT_DIR2+'/data/sample_data/original_data/'

    save_path = ROOT_DIR2+"/data/sample_data/1000_154/"
    # new_points = [[[-0.215571228170187, -0.948702039242467, 3.0423800945281982], [-4.6980434245696, -0.947171436056617, 3.0480549335479736], [-4.6980434245696, -0.947171436056617, 0.036078501492738724], [-0.215571228170187, -0.948702039242467, 0.02952166646718979], [-0.215571228170187, -0.948702039242467, 3.0423800945281982]], [[-0.215555162439024, -3.11223542275595, 3.0621800422668457], [-0.215571228170187, -0.948702039242467, 3.0423800945281982], [-0.215571228170187, -0.948702039242467, 0.02952166646718979], [-0.215555162439024, -3.11223542275595, 0.03738019987940788], [-0.215555162439024, -3.11223542275595, 3.0621800422668457]], [[-4.69794659232765, -3.11232705634018, 3.0621800422668457], [-0.215555162439024, -3.11223542275595, 3.0621800422668457], [-0.215555162439024, -3.11223542275595, 0.03738019987940788], [-4.69794659232765, -3.11232705634018, 0.03738019987940788], [-4.69794659232765, -3.11232705634018, 3.0621800422668457]], [[-4.69794659232765, -3.11232705634018, 0.03738019987940788], [-4.6980434245696, -0.947171436056617, 0.036078501492738724], [-4.6980434245696, -0.947171436056617, 3.0480549335479736], [-4.69794659232765, -3.11232705634018, 3.0621800422668457], [-4.69794659232765, -3.11232705634018, 0.03738019987940788]], [[1.17154207089495, -0.658473605762648, 3.047840118408203], [2.85423922802842, -0.658409047928616, 3.0363399982452393], [2.85423922802842, -0.658409047928616, 0.03525486961007118], [1.17154207089495, -0.658473605762648, 0.03899608179926872], [1.17154207089495, -0.658473605762648, 3.047840118408203]], [[1.17232344394907, 3.10833391622898, 3.0554399490356445], [1.17154207089495, -0.658473605762648, 3.047840118408203], [1.17154207089495, -0.658473605762648, 0.03899608179926872], [1.17232344394907, 3.10833391622898, 0.01646059937775135], [1.17232344394907, 3.10833391622898, 3.0554399490356445]], [[1.17232344394907, 3.10833391622898, 0.01646059937775135], [2.85592963672819, 3.10498754810542, 0.01646059937775135], [2.85592963672819, 3.10498754810542, 3.0554399490356445], [1.17232344394907, 3.10833391622898, 3.0554399490356445], [1.17232344394907, 3.10833391622898, 0.01646059937775135]], [[2.85592963672819, 3.10498754810542, 0.01646059937775135], [2.85423922802842, -0.658409047928616, 0.03525486961007118], [2.85423922802842, -0.658409047928616, 3.0363399982452393], [2.85592963672819, 3.10498754810542, 3.0554399490356445], [2.85592963672819, 3.10498754810542, 0.01646059937775135]], [[-0.0736667534394775, -0.792109886945326, 0.02443454973399639], [-0.0703359259474093, -0.948751631879418, 0.02952166646718979], [-0.0703359259474093, -0.948751631879418, 3.0423800945281982], [-0.0736667534394775, -0.792109886945326, 3.0496299266815186], [-0.0736667534394775, -0.792109886945326, 0.02443454973399639]], [[-0.0243317252695328, -3.11223151357283, 3.0621800422668457], [-0.0703359259474093, -0.948751631879418, 3.0423800945281982], [-0.0703359259474093, -0.948751631879418, 0.02952166646718979], [-0.0243317252695328, -3.11223151357283, 0.03738019987940788], [-0.0243317252695328, -3.11223151357283, 3.0621800422668457]], [[4.69940499681119, -3.11213494616376, 3.0621800422668457], [-0.0243317252695328, -3.11223151357283, 3.0621800422668457], [-0.0243317252695328, -3.11223151357283, 0.03738019987940788], [4.69940499681119, -3.11213494616376, 0.03738019987940788], [4.69940499681119, -3.11213494616376, 3.0621800422668457]], [[4.69711197662828, 3.10132797859425, 3.0554399490356445], [4.69940499681119, -3.11213494616376, 3.0621800422668457], [4.69940499681119, -3.11213494616376, 0.03738019987940788], [4.69711197662828, 3.10132797859425, 0.01646059937775135], [4.69711197662828, 3.10132797859425, 3.0554399490356445]], [[4.69711197662828, 3.10132797859425, 0.01646059937775135], [2.99053100234752, 3.10472001183641, 0.01646059937775135], [2.99053100234752, 3.10472001183641, 3.0554399490356445], [4.69711197662828, 3.10132797859425, 3.0554399490356445], [4.69711197662828, 3.10132797859425, 0.01646059937775135]], [[2.99053100234752, 3.10472001183641, 0.01646059937775135], [2.98952686704443, -0.790252950611448, 0.024747176095843315], [2.98952686704443, -0.790252950611448, 3.038594961166382], [2.99053100234752, 3.10472001183641, 3.0554399490356445], [2.99053100234752, 3.10472001183641, 0.01646059937775135]], [[2.98952686704443, -0.790252950611448, 0.024747176095843315], [2.85417986314639, -0.790574479280031, 0.03525486961007118], [2.85417986314639, -0.790574479280031, 3.0363399982452393], [2.98952686704443, -0.790252950611448, 3.038594961166382], [2.98952686704443, -0.790252950611448, 0.024747176095843315]], [[1.03899695814266, -0.794886605340243, 3.0378000736236572], [2.85417986314639, -0.790574479280031, 3.0363399982452393], [2.85417986314639, -0.790574479280031, 0.03525486961007118], [1.03899695814266, -0.794886605340243, 0.033170800656080246], [1.03899695814266, -0.794886605340243, 3.0378000736236572]], [[1.03671818059138, 3.10860344786449, 3.0554399490356445], [1.03899695814266, -0.794886605340243, 3.0378000736236572], [1.03899695814266, -0.794886605340243, 0.033170800656080246], [1.03671818059138, 3.10860344786449, 0.01646059937775135], [1.03671818059138, 3.10860344786449, 3.0554399490356445]], [[-4.69822532075788, 3.12000233212, 3.0554399490356445], [1.03671818059138, 3.10860344786449, 3.0554399490356445], [1.03671818059138, 3.10860344786449, 0.01646059937775135], [-4.69822532075788, 3.12000233212, 0.01646059937775135], [-4.69822532075788, 3.12000233212, 3.0554399490356445]], [[-4.69822532075788, 3.12000233212, 0.01646059937775135], [-4.69805035458894, -0.792217156192569, 0.036078501492738724], [-4.69805035458894, -0.792217156192569, 3.0480549335479736], [-4.69822532075788, 3.12000233212, 3.0554399490356445], [-4.69822532075788, 3.12000233212, 0.01646059937775135]], [[-0.0736667534394775, -0.792109886945326, 3.0496299266815186], [-4.69805035458894, -0.792217156192569, 3.0480549335479736], [-4.69805035458894, -0.792217156192569, 0.036078501492738724], [-0.0736667534394775, -0.792109886945326, 0.02443454973399639], [-0.0736667534394775, -0.792109886945326, 3.0496299266815186]]]
    # sampling 1000 / k 1000
    # new_points = [[
    #     [4.85258445844372, 3.26737701297628, 0.05875932052731514],
    #     [4.85259324246169, 3.09481363662704, 0.0557435005903244],
    #     [4.85259324246169, 3.09481363662704, 3.0445098876953125],
    #     [4.85258445844372, 3.26737701297628, 3.0591700077056885],
    #     [4.85258445844372, 3.26737701297628, 0.05875932052731514]],
    #     [[4.85259324246169, 3.09481363662704, 0.0557435005903244], [4.69759616397057, 3.09533036759260, 0.0557435005903244], [4.69759616397057, 3.09533036759260, 3.0445098876953125], [4.85259324246169, 3.09481363662704, 3.0445098876953125], [4.85259324246169, 3.09481363662704, 0.0557435005903244]], [[4.69756442362172, 3.26734319976325, 3.0591700077056885], [4.69759616397057, 3.09533036759260, 3.0445098876953125], [4.69759616397057, 3.09533036759260, 0.0557435005903244], [4.69756442362172, 3.26734319976325, 0.05875932052731514], [4.69756442362172, 3.26734319976325, 3.0591700077056885]], [[4.69756442362172, 3.26734319976325, 0.05875932052731514], [4.85258445844372, 3.26737701297628, 0.05875932052731514], [4.85258445844372, 3.26737701297628, 3.0591700077056885], [4.69756442362172, 3.26734319976325, 3.0591700077056885], [4.69756442362172, 3.26734319976325, 0.05875932052731514]], [[4.85291706511409, -3.26673189232133, 3.0660300254821777], [4.85290913535968, -3.11095065434166, 3.05641508102417], [4.85290913535968, -3.11095065434166, 0.03781680017709732], [4.85291706511409, -3.26673189232133, 0.021199500188231468], [4.85291706511409, -3.26673189232133, 3.0660300254821777]], [[4.85291706511409, -3.26673189232133, 0.021199500188231468], [-0.214608106762168, -3.26625288692056, 0.021199500188231468], [-0.214608106762168, -3.26625288692056, 3.0660300254821777], [4.85291706511409, -3.26673189232133, 3.0660300254821777], [4.85291706511409, -3.26673189232133, 0.021199500188231468]], [[-0.214608106762168, -3.26625288692056, 0.021199500188231468], [-0.214745433375814, -3.11238374795242, 0.03781680017709732], [-0.214745433375814, -3.11238374795242, 3.05641508102417], [-0.214608106762168, -3.26625288692056, 3.0660300254821777], [-0.214608106762168, -3.26625288692056, 0.021199500188231468]], [[-0.214745433375814, -3.11238374795242, 0.03781680017709732], [-4.69633638853741, -3.11365110729525, 0.03781680017709732], [-4.69633638853741, -3.11365110729525, 3.05641508102417], [-0.214745433375814, -3.11238374795242, 3.05641508102417], [-0.214745433375814, -3.11238374795242, 0.03781680017709732]], [[-4.69633531015145, -3.26582925379346, 3.0660300254821777], [-4.69633638853741, -3.11365110729525, 3.05641508102417], [-4.69633638853741, -3.11365110729525, 0.03781680017709732], [-4.69633531015145, -3.26582925379346, 0.021199500188231468], [-4.69633531015145, -3.26582925379346, 3.0660300254821777]], [[-4.85362003542260, -3.26581438652979, 3.0660300254821777], [-4.69633531015145, -3.26582925379346, 3.0660300254821777], [-4.69633531015145, -3.26582925379346, 0.021199500188231468], [-4.85362003542260, -3.26581438652979, 0.021199500188231468], [-4.85362003542260, -3.26581438652979, 3.0660300254821777]], [[-4.85362003542260, -3.26581438652979, 0.021199500188231468], [-4.85310388112334, 3.12717059648017, 0.0557435005903244], [-4.85310388112334, 3.12717059648017, 3.0445098876953125], [-4.85362003542260, -3.26581438652979, 3.0660300254821777], [-4.85362003542260, -3.26581438652979, 0.021199500188231468]], [[-4.85310388112334, 3.12717059648017, 0.0557435005903244], [-4.69638060941402, 3.12664811071267, 0.0557435005903244], [-4.69638060941402, 3.12664811071267, 3.0445098876953125], [-4.85310388112334, 3.12717059648017, 3.0445098876953125], [-4.85310388112334, 3.12717059648017, 0.0557435005903244]], [[-4.69635264605458, -0.819445757436463, 3.0691800117492676], [-4.69638060941402, 3.12664811071267, 3.0445098876953125], [-4.69638060941402, 3.12664811071267, 0.0557435005903244], [-4.69635264605458, -0.819445757436463, 0.05283840000629425], [-4.69635264605458, -0.819445757436463, 3.0691800117492676]], [[-4.69635264605458, -0.819445757436463, 0.05283840000629425], [-0.216780360466777, -0.832326947329312, 0.04095960035920143], [-0.216780360466777, -0.832326947329312, 3.0555601119995117], [-4.69635264605458, -0.819445757436463, 3.0691800117492676], [-4.69635264605458, -0.819445757436463, 0.05283840000629425]], [[-0.216780360466777, -0.832326947329312, 0.04095960035920143], [-0.0815272104394807, -0.832715873190541, 0.04095960035920143], [-0.0815272104394807, -0.832715873190541, 3.0555601119995117], [-0.216780360466777, -0.832326947329312, 3.0555601119995117], [-0.216780360466777, -0.832326947329312, 0.04095960035920143]], [[-0.0231737561759769, -3.11232957296025, 3.05641508102417], [-0.0815272104394807, -0.832715873190541, 3.0555601119995117], [-0.0815272104394807, -0.832715873190541, 0.04095960035920143], [-0.0231737561759769, -3.11232957296025, 0.03781680017709732], [-0.0231737561759769, -3.11232957296025, 3.05641508102417]], [[4.69874137451093, -3.11099425179489, 3.05641508102417], [-0.0231737561759769, -3.11232957296025, 3.05641508102417], [-0.0231737561759769, -3.11232957296025, 0.03781680017709732], [4.69874137451093, -3.11099425179489, 0.03781680017709732], [4.69874137451093, -3.11099425179489, 3.05641508102417]], [[4.69874137451093, -3.11099425179489, 0.03781680017709732], [4.85290913535968, -3.11095065434166, 0.03781680017709732], [4.85290913535968, -3.11095065434166, 3.05641508102417], [4.69874137451093, -3.11099425179489, 3.05641508102417], [4.69874137451093, -3.11099425179489, 0.03781680017709732]]]
    # 1000_154
    new_points = [[[-4.69504407657618, -0.935868181090861, 0.1496819406747818], [-0.215567456460932, -0.900815714501283, 0.14396533370018005], [-0.215561926899511, -0.916888355021381, 2.9359941482543945], [-4.70049524780957, -0.952026862239403, 2.949246644973755], [-4.69504407657618, -0.935868181090861, 0.1496819406747818]], [[-0.215567456460932, -0.900815714501283, 0.14396533370018005], [-0.215555018107351, -3.11198933848287, 0.14396533370018005], [-0.215549580005513, -3.11180315364089, 2.9359941482543945], [-0.215561926899511, -0.916888355021381, 2.9359941482543945], [-0.215567456460932, -0.900815714501283, 0.14396533370018005]], [[-4.70047880735618, -3.11193420636725, 2.949246644973755], [-0.215549580005513, -3.11180315364089, 2.9359941482543945], [-0.215555018107351, -3.11198933848287, 0.14396533370018005], [-4.69502751170882, -3.11212073321053, 0.1496819406747818], [-4.70047880735618, -3.11193420636725, 2.949246644973755]], [[-4.69502751170882, -3.11212073321053, 0.1496819406747818], [-4.69504407657618, -0.935868181090861, 0.1496819406747818], [-4.70049524780957, -0.952026862239403, 2.949246644973755], [-4.70047880735618, -3.11193420636725, 2.949246644973755], [-4.69502751170882, -3.11212073321053, 0.1496819406747818]], [[-4.69507492183106, 3.11650744164568, 0.1496819406747818], [1.03242538192556, 3.10200428628974, 0.15101078152656555], [1.02471435823709, 3.10978782351832, 2.8625364303588867], [-4.70052627717941, 3.12453734075763, 2.949246644973755], [-4.69507492183106, 3.11650744164568, 0.1496819406747818]], [[1.05464263683048, -0.793293217866431, 3.0181798934936523], [1.02471435823709, 3.10978782351832, 2.8625364303588867], [1.03242538192556, 3.10200428628974, 0.15101078152656555], [1.06279127855612, -0.793284047201257, 0.13006199896335602], [1.05464263683048, -0.793293217866431, 3.0181798934936523]], [[1.05464263683048, -0.793293217866431, 3.0181798934936523], [1.06279127855612, -0.793284047201257, 0.13006199896335602], [2.99018605555348, -0.793315586927630, 0.13006199896335602], [2.99015790019183, -0.793324890475762, 3.0181798934936523], [1.05464263683048, -0.793293217866431, 3.0181798934936523]], [[2.99018605555348, -0.793315586927630, 0.13006199896335602], [2.99016772093217, 3.09699593381694, 0.1336660087108612], [2.99014021616806, 3.10506340382218, 2.9511499404907227], [2.99015790019183, -0.793324890475762, 3.0181798934936523], [2.99018605555348, -0.793315586927630, 0.13006199896335602]], [[2.99016772093217, 3.09699593381694, 0.1336660087108612], [4.69853780561018, 3.09271214966031, 0.14878098666667938], [4.69897758802438, 3.10073933753183, 2.9526100158691406], [2.99014021616806, 3.10506340382218, 2.9511499404907227], [2.99016772093217, 3.09699593381694, 0.1336660087108612]], [[4.69897758802438, 3.10073933753183, 2.9526100158691406], [4.69853780561018, 3.09271214966031, 0.14878098666667938], [4.69854257394420, -3.11184445573200, 0.14878098666667938], [4.69898236238376, -3.11165747122254, 2.9526100158691406], [4.69897758802438, 3.10073933753183, 2.9526100158691406]], [[-0.0220303857214966, -3.11179523076390, 2.969434976577759], [4.69898236238376, -3.11165747122254, 2.9526100158691406], [4.69854257394420, -3.11184445573200, 0.14878098666667938], [-0.0226156059055016, -3.11198511855985, 0.12213236838579178], [-0.0220303857214966, -3.11179523076390, 2.969434976577759]], [[-0.0220303857214966, -3.11179523076390, 2.969434976577759], [-0.0226156059055016, -3.11198511855985, 0.12213236838579178], [-0.0776491150291426, -0.803129631801719, 0.12213236838579178], [-0.0773696934726929, -0.790110381489786, 2.969434976577759], [-0.0220303857214966, -3.11179523076390, 2.969434976577759]], [[-4.70052716510208, -0.806704803850425, 2.9650700092315674], [-0.0773696934726929, -0.790110381489786, 2.969434976577759], [-0.0776491150291426, -0.803129631801719, 0.12213236838579178], [-4.69494004690468, -0.819803447152382, 0.09580279886722565], [-4.70052716510208, -0.806704803850425, 2.9650700092315674]], [[-4.69494004690468, -0.819803447152382, 0.09580279886722565], [-4.69507492183106, 3.11650744164568, 0.1496819406747818], [-4.70052627717941, 3.12453734075763, 2.949246644973755], [-4.70052716510208, -0.806704803850425, 2.9650700092315674], [-4.69494004690468, -0.819803447152382, 0.09580279886722565]], [[1.17320565521754, 3.10138780815287, 0.06024203822016716], [2.85586881867963, 3.09738516389629, 0.15080325305461884], [2.85558382900044, 3.10541690113678, 2.955579996109009], [1.17350050229384, 3.10954758873162, 2.910249948501587], [1.17320565521754, 3.10138780815287, 0.06024203822016716]], [[2.85586881867963, 3.09738516389629, 0.15080325305461884], [2.85486656303512, -0.658531022627782, 0.16760849952697754], [2.85458099805851, -0.658559240618733, 2.957031488418579], [2.85558382900044, 3.10541690113678, 2.955579996109009], [2.85586881867963, 3.09738516389629, 0.15080325305461884]], [[2.85486656303512, -0.658531022627782, 0.16760849952697754], [1.16878469578947, -0.658449396972333, 0.16760849952697754], [1.16906382832613, -0.658477642301105, 2.957031488418579], [2.85458099805851, -0.658559240618733, 2.957031488418579], [2.85486656303512, -0.658531022627782, 0.16760849952697754]], [[1.17350050229384, 3.10954758873162, 2.910249948501587], [1.16906382832613, -0.658477642301105, 2.957031488418579], [1.16878469578947, -0.658449396972333, 0.16760849952697754], [1.17320565521754, 3.10138780815287, 0.06024203822016716], [1.17350050229384, 3.10954758873162, 2.910249948501587]]]
    # 1000_308
    #new_points = [[[-0.215559861362947, -0.922680390078783, 2.9753849506378174], [-4.70030213040636, -0.956842864409444, 2.9604432582855225], [-4.69489111282485, -0.933327791695874, 0.14226000010967255], [-0.215563689601628, -0.899082358754701, 0.14227183163166046], [-0.215559861362947, -0.922680390078783, 2.9753849506378174]], [[-0.215563689601628, -0.899082358754701, 0.14227183163166046], [-0.215556433376786, -3.10992158117343, 0.14227183163166046], [-0.215552677275801, -3.11154057365435, 2.9753849506378174], [-0.215559861362947, -0.922680390078783, 2.9753849506378174], [-0.215563689601628, -0.899082358754701, 0.14227183163166046]], [[-0.215556433376786, -3.10992158117343, 0.14227183163166046], [-4.69491368273048, -3.10999078034071, 0.14226000010967255], [-4.70032447318306, -3.11160132475429, 2.9604432582855225], [-0.215552677275801, -3.11154057365435, 2.9753849506378174], [-0.215556433376786, -3.10992158117343, 0.14227183163166046]], [[-4.69491368273048, -3.10999078034071, 0.14226000010967255], [-4.69489111282485, -0.933327791695874, 0.14226000010967255], [-4.70030213040636, -0.956842864409444, 2.9604432582855225], [-4.70032447318306, -3.11160132475429, 2.9604432582855225], [-4.69491368273048, -3.10999078034071, 0.14226000010967255]], [[-4.69484920133275, 3.10865603986812, 0.14226000010967255], [1.03041617572514, 3.09442229918948, 0.1253737360239029], [1.02570699708767, 3.11186205066013, 2.8825082778930664], [-4.70025979023275, 3.12648341728613, 2.9604432582855225], [-4.69484920133275, 3.10865603986812, 0.14226000010967255]], [[1.05659089191419, -0.793294897140246, 3.0294435024261475], [1.02570699708767, 3.11186205066013, 2.8825082778930664], [1.03041617572514, 3.09442229918948, 0.1253737360239029], [1.06137313157032, -0.793278491926742, 0.1442900002002716], [1.05659089191419, -0.793294897140246, 3.0294435024261475]], [[1.05659089191419, -0.793294897140246, 3.0294435024261475], [1.06137313157032, -0.793278491926742, 0.1442900002002716], [2.99014350812122, -0.793311287212559, 0.1442900002002716], [2.99016233695409, -0.793327774059633, 3.0294435024261475], [1.05659089191419, -0.793294897140246, 3.0294435024261475]], [[2.99014350812122, -0.793311287212559, 0.1442900002002716], [2.99015281505834, 3.08959606673554, 0.1268586665391922], [2.99017153018779, 3.10768070467498, 2.9878599643707275], [2.99016233695409, -0.793327774059633, 3.0294435024261475], [2.99014350812122, -0.793311287212559, 0.1442900002002716]], [[2.99015281505834, 3.08959606673554, 0.1268586665391922], [4.69855121870867, 3.08540731142863, 0.13108110427856445], [4.69898433835880, 3.10327743825144, 2.958308458328247], [2.99017153018779, 3.10768070467498, 2.9878599643707275], [2.99015281505834, 3.08959606673554, 0.1268586665391922]], [[4.69898433835880, 3.10327743825144, 2.958308458328247], [4.69855121870867, 3.08540731142863, 0.13108110427856445], [4.69853017565352, -3.10983926370923, 0.13108110427856445], [4.69896322911747, -3.11145488611627, 2.958308458328247], [4.69898433835880, 3.10327743825144, 2.958308458328247]], [[-0.0244446410912695, -3.11153582573897, 2.972243309020996], [4.69896322911747, -3.11145488611627, 2.958308458328247], [4.69853017565352, -3.10983926370923, 0.13108110427856445], [-0.0258313555391654, -3.10988391399369, 0.08148660510778427], [-0.0244446410912695, -3.11153582573897, 2.972243309020996]], [[-0.0244446410912695, -3.11153582573897, 2.972243309020996], [-0.0258313555391654, -3.10988391399369, 0.08148660510778427], [-0.0780557885483390, -0.804359719523673, 0.08148660510778427], [-0.0768989692225144, -0.795862573910432, 2.972243309020996], [-0.0244446410912695, -3.11153582573897, 2.972243309020996]], [[-0.0780557885483390, -0.804359719523673, 0.08148660510778427], [-4.69488990866755, -0.817197726231458, 0.14226000010967255], [-4.70030059671620, -0.808932338764955, 2.9604432582855225], [-0.0768989692225144, -0.795862573910432, 2.972243309020996], [-0.0780557885483390, -0.804359719523673, 0.08148660510778427]], [[-4.70030059671620, -0.808932338764955, 2.9604432582855225], [-4.69488990866755, -0.817197726231458, 0.14226000010967255], [-4.69484920133275, 3.10865603986812, 0.14226000010967255], [-4.70025979023275, 3.12648341728613, 2.9604432582855225], [-4.70030059671620, -0.808932338764955, 2.9604432582855225]], [[1.17325253595228, 3.09358703086584, 0.04899119958281517], [2.85557345411164, 3.08995636852835, 0.13132455945014954], [2.85563942606737, 3.10783904018321, 2.960393190383911], [1.17332736028717, 3.11199192982856, 2.960679769515991], [1.17325253595228, 3.09358703086584, 0.04899119958281517]], [[2.85498549650621, -0.658546480069116, 3.0092501640319824], [2.85563942606737, 3.10783904018321, 2.960393190383911], [2.85557345411164, 3.08995636852835, 0.13132455945014954], [2.85492127020369, -0.658522995881556, 0.11859649419784546], [2.85498549650621, -0.658546480069116, 3.0092501640319824]], [[2.85498549650621, -0.658546480069116, 3.0092501640319824], [2.85492127020369, -0.658522995881556, 0.11859649419784546], [1.16924305951604, -0.658452947740742, 0.11859649419784546], [1.16929778615619, -0.658476431533544, 3.0092501640319824], [2.85498549650621, -0.658546480069116, 3.0092501640319824]], [[1.17332736028717, 3.11199192982856, 2.960679769515991], [1.16929778615619, -0.658476431533544, 3.0092501640319824], [1.16924305951604, -0.658452947740742, 0.11859649419784546], [1.17325253595228, 3.09358703086584, 0.04899119958281517], [1.17332736028717, 3.11199192982856, 2.960679769515991]]]
    # 1000_462
    #new_points = [[[-4.69742654996742, -0.944687562970651, 0.13591593503952026], [-0.215562365004044, -0.885041607188995, 0.13039299845695496], [-0.215559169740494, -0.893503972070089, 2.9614899158477783], [-4.69810439417637, -0.953174613863328, 2.9722402095794678], [-4.69742654996742, -0.944687562970651, 0.13591593503952026]], [[-0.215562365004044, -0.885041607188995, 0.13039299845695496], [-0.215557575105377, -3.11209619995431, 0.13039299845695496], [-0.215554398258109, -3.11199594873948, 2.9614899158477783], [-0.215559169740494, -0.893503972070089, 2.9614899158477783], [-0.215562365004044, -0.885041607188995, 0.13039299845695496]], [[-4.69778098679586, -3.11219836440222, 2.9722402095794678], [-0.215554398258109, -3.11199594873948, 2.9614899158477783], [-0.215557575105377, -3.11209619995431, 0.13039299845695496], [-4.69710185624313, -3.11229876985063, 0.13591593503952026], [-4.69778098679586, -3.11219836440222, 2.9722402095794678]], [[-4.69710185624313, -3.11229876985063, 0.13591593503952026], [-4.69742654996742, -0.944687562970651, 0.13591593503952026], [-4.69810439417637, -0.953174613863328, 2.9722402095794678], [-4.69778098679586, -3.11219836440222, 2.9722402095794678], [-4.69710185624313, -3.11229876985063, 0.13591593503952026]], [[-4.69803509582758, 3.11788195322193, 0.13591593503952026], [1.03198755351280, 3.10057424796145, 0.13743199408054352], [1.03009659936515, 3.10992525022148, 2.877251386642456], [-4.69871566081776, 3.12755846824513, 2.9722402095794678], [-4.69803509582758, 3.11788195322193, 0.13591593503952026]], [[1.05451715492621, -0.793294010758193, 2.945497751235962], [1.03009659936515, 3.10992525022148, 2.877251386642456], [1.03198755351280, 3.10057424796145, 0.13743199408054352], [1.05638428671842, -0.793277447577836, 0.15350060164928436], [1.05451715492621, -0.793294010758193, 2.945497751235962]], [[1.05451715492621, -0.793294010758193, 2.945497751235962], [1.05638428671842, -0.793277447577836, 0.15350060164928436], [2.99008967942343, -0.793319210177912, 0.15350060164928436], [2.99016116771160, -0.793335815227012, 2.945497751235962], [1.05451715492621, -0.793294010758193, 2.945497751235962]], [[2.99020921664198, 3.10433505527692, 2.974630832672119], [2.99016116771160, -0.793335815227012, 2.945497751235962], [2.99008967942343, -0.793319210177912, 0.15350060164928436], [2.99013636350353, 3.09464588705873, 0.1339295506477356], [2.99020921664198, 3.10433505527692, 2.974630832672119]], [[2.99020921664198, 3.10433505527692, 2.974630832672119], [2.99013636350353, 3.09464588705873, 0.1339295506477356], [4.69857080989886, 3.08949200696270, 0.13628645241260529], [4.69894503715375, 3.09918127498098, 2.9772839546203613], [2.99020921664198, 3.10433505527692, 2.974630832672119]], [[4.69894503715375, 3.09918127498098, 2.9772839546203613], [4.69857080989886, 3.08949200696270, 0.13628645241260529], [4.69859615592924, -3.11187365257468, 0.13628645241260529], [4.69897042237456, -3.11177303398361, 2.9772839546203613], [4.69894503715375, 3.09918127498098, 2.9772839546203613]], [[-0.0249350619191216, -3.11198531894118, 3.018120050430298], [4.69897042237456, -3.11177303398361, 2.9772839546203613], [4.69859615592924, -3.11187365257468, 0.13628645241260529], [-0.0260209962678666, -3.11209009633095, 0.06058710068464279], [-0.0249350619191216, -3.11198531894118, 3.018120050430298]], [[-0.0249350619191216, -3.11198531894118, 3.018120050430298], [-0.0260209962678666, -3.11209009633095, 0.06058710068464279], [-0.0762845359819283, -0.804292823360738, 0.06058710068464279], [-0.0754845936299218, -0.791057025873319, 3.018120050430298], [-0.0249350619191216, -3.11198531894118, 3.018120050430298]], [[-0.0762845359819283, -0.804292823360738, 0.06058710068464279], [-4.69742975338264, -0.819277897474812, 0.07083725929260254], [-4.69812002140762, -0.806416873958681, 2.9456939697265625], [-0.0754845936299218, -0.791057025873319, 3.018120050430298], [-0.0762845359819283, -0.804292823360738, 0.06058710068464279]], [[-4.69742975338264, -0.819277897474812, 0.07083725929260254], [-4.69803509582758, 3.11788195322193, 0.13591593503952026], [-4.69871566081776, 3.12755846824513, 2.9722402095794678], [-4.69812002140762, -0.806416873958681, 2.9456939697265625], [-4.69742975338264, -0.819277897474812, 0.07083725929260254]], [[1.17292980665091, 3.09982161705163, 0.041626766324043274], [2.85554384935834, 3.09502499316030, 0.12585075199604034], [2.85558490999938, 3.10473271434834, 2.9719631671905518], [1.17325778493881, 3.10995511129568, 3.01282000541687], [1.17292980665091, 3.09982161705163, 0.041626766324043274]], [[2.85554384935834, 3.09502499316030, 0.12585075199604034], [2.85499848307335, -0.658519510863902, 0.36481526494026184], [2.85503319309457, -0.658540130879229, 2.8570783138275146], [2.85558490999938, 3.10473271434834, 2.9719631671905518], [2.85554384935834, 3.09502499316030, 0.12585075199604034]], [[2.85499848307335, -0.658519510863902, 0.36481526494026184], [1.16922095767872, -0.658472651638301, 0.36481526494026184], [1.16948758177124, -0.658493278100098, 2.8570783138275146], [2.85503319309457, -0.658540130879229, 2.8570783138275146], [2.85499848307335, -0.658519510863902, 0.36481526494026184]], [[1.17325778493881, 3.10995511129568, 3.01282000541687], [1.16948758177124, -0.658493278100098, 2.8570783138275146], [1.16922095767872, -0.658472651638301, 0.36481526494026184], [1.17292980665091, 3.09982161705163, 0.041626766324043274], [1.17325778493881, 3.10995511129568, 3.01282000541687]]]
    # 1000_616
    #new_points = [[[-4.69387027443672, -0.924146936716512, 0.13571849465370178], [-0.216094742985872, -0.891793471389157, 0.13535740971565247], [-0.215782728264981, -0.922327996195284, 2.9614224433898926], [-4.70070842990524, -0.955425225412073, 3.0258355140686035], [-4.69387027443672, -0.924146936716512, 0.13571849465370178]], [[-0.216094742985872, -0.891793471389157, 0.13535740971565247], [-0.215487923826122, -3.11186801699262, 0.13535740971565247], [-0.215184211207631, -3.11202893556516, 2.9614224433898926], [-0.215782728264981, -0.922327996195284, 2.9614224433898926], [-0.216094742985872, -0.891793471389157, 0.13535740971565247]], [[-4.70034330744231, -3.11223676485454, 3.0258355140686035], [-0.215184211207631, -3.11202893556516, 2.9614224433898926], [-0.215487923826122, -3.11186801699262, 0.13535740971565247], [-4.69349988484681, -3.11207187346104, 0.13571849465370178], [-4.70034330744231, -3.11223676485454, 3.0258355140686035]], [[-4.69349988484681, -3.11207187346104, 0.13571849465370178], [-4.69387027443672, -0.924146936716512, 0.13571849465370178], [-4.70070842990524, -0.955425225412073, 3.0258355140686035], [-4.70034330744231, -3.11223676485454, 3.0258355140686035], [-4.69349988484681, -3.11207187346104, 0.13571849465370178]], [[-4.69455437418345, 3.11689237936869, 0.13571849465370178], [1.03053038759150, 3.10215428186665, 0.05659087747335434], [1.02388715962762, 3.11094124587344, 2.9334371089935303], [-4.70139931915652, 3.12572031050657, 3.0258355140686035], [-4.69455437418345, 3.11689237936869, 0.13571849465370178]], [[1.03053038759150, 3.10215428186665, 0.05659087747335434], [1.06186466401404, -0.793280045586979, 0.3587728440761566], [1.05587931745421, -0.793298549616390, 2.9792850017547607], [1.02388715962762, 3.11094124587344, 2.9334371089935303], [1.03053038759150, 3.10215428186665, 0.05659087747335434]], [[1.05587931745421, -0.793298549616390, 2.9792850017547607], [1.06186466401404, -0.793280045586979, 0.3587728440761566], [2.99006482021802, -0.793312941719179, 0.3587728440761566], [2.99016478562270, -0.793331549567286, 2.9792850017547607], [1.05587931745421, -0.793298549616390, 2.9792850017547607]], [[2.99023311792879, 3.10626458703413, 3.032651901245117], [2.99016478562270, -0.793331549567286, 2.9792850017547607], [2.99006482021802, -0.793312941719179, 0.3587728440761566], [2.99012218473366, 3.09741173538900, 0.12858258187770844], [2.99023311792879, 3.10626458703413, 3.032651901245117]], [[2.99012218473366, 3.09741173538900, 0.12858258187770844], [4.69857288432728, 3.09308524269212, 0.12844842672348022], [4.69893768569627, 3.10192549354219, 3.028595209121704], [2.99023311792879, 3.10626458703413, 3.032651901245117], [2.99012218473366, 3.09741173538900, 0.12858258187770844]], [[4.69893768569627, 3.10192549354219, 3.028595209121704], [4.69857288432728, 3.09308524269212, 0.12844842672348022], [4.69859619089599, -3.11164393795624, 0.12844842672348022], [4.69896102609154, -3.11180907238738, 3.028595209121704], [4.69893768569627, 3.10192549354219, 3.028595209121704]], [[4.69859619089599, -3.11164393795624, 0.12844842672348022], [-0.0217673098231270, -3.11185914043342, 0.13432949781417847], [-0.0181752242719085, -3.11201978264037, 2.958169937133789], [4.69896102609154, -3.11180907238738, 3.028595209121704], [4.69859619089599, -3.11164393795624, 0.12844842672348022]], [[-0.0181752242719085, -3.11201978264037, 2.958169937133789], [-0.0217673098231270, -3.11185914043342, 0.13432949781417847], [-0.0794413093211225, -0.798001974614927, 0.13432949781417847], [-0.0759193223997461, -0.795350288591028, 2.958169937133789], [-0.0181752242719085, -3.11201978264037, 2.958169937133789]], [[-0.0759193223997461, -0.795350288591028, 2.958169937133789], [-0.0794413093211225, -0.798001974614927, 0.13432949781417847], [-4.69367635096860, -0.813702217370727, 0.04592490941286087], [-4.70037256403625, -0.811081463107336, 2.873673439025879], [-0.0759193223997461, -0.795350288591028, 2.958169937133789]], [[-4.70139931915652, 3.12572031050657, 3.0258355140686035], [-4.70037256403625, -0.811081463107336, 2.873673439025879], [-4.69367635096860, -0.813702217370727, 0.04592490941286087], [-4.69455437418345, 3.11689237936869, 0.13571849465370178], [-4.70139931915652, 3.12572031050657, 3.0258355140686035]], [[2.85574985378646, 3.10659014715870, 3.027740001678467], [1.17395126363364, 3.11059048694836, 2.9430248737335205], [1.17358339218633, 3.10173045337115, 0.036386266350746155], [2.85562280569146, 3.09755054693264, 0.06239866092801094], [2.85574985378646, 3.10659014715870, 3.027740001678467]], [[2.85562280569146, 3.09755054693264, 0.06239866092801094], [2.85474116708306, -0.658519823524532, 0.3821829855442047], [2.85484967532890, -0.658538077916381, 2.958585500717163], [2.85574985378646, 3.10659014715870, 3.027740001678467], [2.85562280569146, 3.09755054693264, 0.06239866092801094]], [[2.85474116708306, -0.658519823524532, 0.3821829855442047], [1.16810662491235, -0.658479470185184, 0.3821829855442047], [1.16842114734971, -0.658497729505997, 2.958585500717163], [2.85484967532890, -0.658538077916381, 2.958585500717163], [2.85474116708306, -0.658519823524532, 0.3821829855442047]], [[1.17395126363364, 3.11059048694836, 2.9430248737335205], [1.16842114734971, -0.658497729505997, 2.958585500717163], [1.16810662491235, -0.658479470185184, 0.3821829855442047], [1.17358339218633, 3.10173045337115, 0.036386266350746155], [1.17395126363364, 3.11059048694836, 2.9430248737335205]]]
    # 1000_771
    # new_points = [[[-4.69389889011333, 3.10335064358094, 0.049822576344013214], [1.03408773855754, 3.09116968361696, 0.14344298839569092], [1.02278257674012, 3.11214237658565, 3.0102968215942383], [-4.70092098025343, 3.12500906184332, 3.0118415355682373], [-4.69389889011333, 3.10335064358094, 0.049822576344013214]], [[1.03408773855754, 3.09116968361696, 0.14344298839569092], [1.06400940511891, -0.793279396712381, 0.22132234275341034], [1.05309616594587, -0.793291560610660, 3.029345989227295], [1.02278257674012, 3.11214237658565, 3.0102968215942383], [1.03408773855754, 3.09116968361696, 0.14344298839569092]], [[1.05309616594587, -0.793291560610660, 3.029345989227295], [1.06400940511891, -0.793279396712381, 0.22132234275341034], [2.99003051230830, -0.793316126599244, 0.22132234275341034], [2.99013919250739, -0.793328500689328, 3.029345989227295], [1.05309616594587, -0.793291560610660, 3.029345989227295]], [[2.99025510276727, 3.10783445088866, 3.02548885345459], [2.99013919250739, -0.793328500689328, 3.029345989227295], [2.99003051230830, -0.793316126599244, 0.22132234275341034], [2.99014241317404, 3.08667922356309, 0.13014361262321472], [2.99025510276727, 3.10783445088866, 3.02548885345459]], [[4.69902085535826, 3.10403058506810, 3.0301434993743896], [2.99025510276727, 3.10783445088866, 3.02548885345459], [2.99014241317404, 3.08667922356309, 0.13014361262321472], [4.69862516386824, 3.08240690715049, 0.07059898227453232], [4.69902085535826, 3.10403058506810, 3.0301434993743896]], [[4.69902085535826, 3.10403058506810, 3.0301434993743896], [4.69862516386824, 3.08240690715049, 0.07059898227453232], [4.69849937084730, -3.10667046043375, 0.07059898227453232], [4.69889455038093, -3.11023528379488, 3.0301434993743896], [4.69902085535826, 3.10403058506810, 3.0301434993743896]], [[4.69849937084730, -3.10667046043375, 0.07059898227453232], [-0.0214027452288967, -3.10838757919233, 0.1948705017566681], [-0.0179472520714300, -3.11170268852115, 2.9479517936706543], [4.69889455038093, -3.11023528379488, 3.0301434993743896], [4.69849937084730, -3.10667046043375, 0.07059898227453232]], [[-0.0179472520714300, -3.11170268852115, 2.9479517936706543], [-0.0214027452288967, -3.10838757919233, 0.1948705017566681], [-0.0836325121477414, -0.805161070976965, 0.1948705017566681], [-0.0802710740370387, -0.804995047599288, 2.9479517936706543], [-0.0179472520714300, -3.11170268852115, 2.9479517936706543]], [[-4.70065232035749, -0.811105640535908, 3.0118415355682373], [-0.0802710740370387, -0.804995047599288, 2.9479517936706543], [-0.0836325121477414, -0.805161070976965, 0.1948705017566681], [-4.69363169728371, -0.811270187202186, 0.049822576344013214], [-4.70065232035749, -0.811105640535908, 3.0118415355682373]], [[-4.70065232035749, -0.811105640535908, 3.0118415355682373], [-4.69363169728371, -0.811270187202186, 0.049822576344013214], [-4.69389889011333, 3.10335064358094, 0.049822576344013214], [-4.70092098025343, 3.12500906184332, 3.0118415355682373], [-4.70065232035749, -0.811105640535908, 3.0118415355682373]], [[2.85542937421655, 3.10814728885732, 3.026860237121582], [1.17316064695511, 3.11180691754798, 3.0106101036071777], [1.17281176875624, 3.09007579409506, 0.03637494891881943], [2.85534905934487, 3.08639576851357, 0.049916110932826996], [2.85542937421655, 3.10814728885732, 3.026860237121582]], [[2.85534905934487, 3.08639576851357, 0.049916110932826996], [2.85526608398736, -0.658517487397865, 0.34721267223358154], [2.85533784656942, -0.658548692436148, 3.024796724319458], [2.85542937421655, 3.10814728885732, 3.026860237121582], [2.85534905934487, 3.08639576851357, 0.049916110932826996]], [[2.85526608398736, -0.658517487397865, 0.34721267223358154], [1.16992325933387, -0.658452743774802, 0.34721267223358154], [1.17022205973100, -0.658483957534902, 3.024796724319458], [2.85533784656942, -0.658548692436148, 3.024796724319458], [2.85526608398736, -0.658517487397865, 0.34721267223358154]], [[1.17316064695511, 3.11180691754798, 3.0106101036071777], [1.17022205973100, -0.658483957534902, 3.024796724319458], [1.16992325933387, -0.658452743774802, 0.34721267223358154], [1.17281176875624, 3.09007579409506, 0.03637494891881943], [1.17316064695511, 3.11180691754798, 3.0106101036071777]], [[-4.70049518148885, -3.11333466878821, 3.0118415355682373], [-0.214840911035053, -3.11177122141479, 2.95056414604187], [-0.214602023751784, -3.10840343268746, 0.15476812422275543], [-4.69347481333511, -3.10976440218897, 0.049822576344013214], [-4.70049518148885, -3.11333466878821, 3.0118415355682373]], [[-4.69347481333511, -3.10976440218897, 0.049822576344013214], [-4.69384215574736, -0.943476574890188, 0.1424228399991989], [-4.70068737781880, -0.966016190836878, 3.0310933589935303], [-4.70049518148885, -3.11333466878821, 3.0118415355682373], [-4.69347481333511, -3.10976440218897, 0.049822576344013214]], [[-4.69384215574736, -0.943476574890188, 0.1424228399991989], [-0.217136730289171, -0.891174230184096, 0.15476812422275543], [-0.217354614772920, -0.912914173535399, 2.95056414604187], [-4.70068737781880, -0.966016190836878, 3.0310933589935303], [-4.69384215574736, -0.943476574890188, 0.1424228399991989]], [[-0.217136730289171, -0.891174230184096, 0.15476812422275543], [-0.214602023751784, -3.10840343268746, 0.15476812422275543], [-0.214840911035053, -3.11177122141479, 2.95056414604187], [-0.217354614772920, -0.912914173535399, 2.95056414604187], [-0.217136730289171, -0.891174230184096, 0.15476812422275543]]]

    a = rs.Point_sort()

    original_check = [False for i in range(len(list_original))]
    new_check = [False for i in range(len(new_points))]

    print original_check
    print new_check
    result_IOU_list = []
    print len(new_points)
    original_data = []
    e = 0.005
    for original_i in range(len(list_original)):


        plydata = PlyData.read(test_path+list_original[original_i]+".ply")
        test_data = []
        test_data.append(plydata['vertex']['x'])
        test_data.append(plydata['vertex']['y'])
        test_data.append(plydata['vertex']['z'])
        test_data = np.asarray(test_data).T.tolist()
        test_data_bbox = get_range(test_data, e)
        original_data.append(test_data)
        temp_list1 = []
        temp_list2 = []
        opoints = []
        print list_original[original_i],"-------------------------------------------------"
        for each_data in test_data:
            temp_list1.append([each_data[0], each_data[2]])
            temp_list2.append([each_data[1], each_data[2]])

        if check_closed(temp_list1) == -1:
            temp_list1 = rs2.CalculateCentroid2D(temp_list1)
        if check_closed(temp_list2) == -1:
            temp_list2 = rs2.CalculateCentroid2D(temp_list2)
        # a.visual_graph3([temp_list1, temp_list2])
        if get_PolygonArea(temp_list1) > get_PolygonArea(temp_list2):
            checkValue = True
            opoints.extend(temp_list1)
        else:
            checkValue = False
            opoints.extend(temp_list2)
        iou_list = []
        each_result = []
        for new_j in range(len(new_points)):
            # if new_j == 8 or new_j == 14:
            #     continue
            if new_check[new_j] == False:
                new_data_bbox = get_range(new_points[new_j], e)

                if check_bbox(test_data_bbox, new_data_bbox):

                    temp_list3 = []

                    for new_each_data in new_points[new_j]:
                        if checkValue:
                            temp_list3.append([new_each_data[0], new_each_data[2]])
                        else:
                            temp_list3.append([new_each_data[1], new_each_data[2]])

                    if check_closed(temp_list3) == -1:
                        temp_list3 = rs2.CalculateCentroid2D(temp_list3)

                    result_IOU = get_IOU(opoints, temp_list3)
                    if result_IOU != -1:
                        print original_i,new_j,result_IOU
                        iou_list.append(result_IOU[-1])
                        result_temp = []
                        result_temp.append(original_i)
                        result_temp.append(new_j)
                        result_temp.append(result_IOU)
                        each_result.append(result_temp)
                        # graph_data = []
                        # graph_data.append(opoints)
                        # graph_data.append(temp_list3)
                        #
                        # a.visual_graph3(graph_data)
                    # original_check[i] = True
                    # new_check[j] = True
            else:
                continue
        if len(iou_list) != 0:
            max_value = max(iou_list)
            max_index = iou_list.index(max_value)
            result_IOU_list.append(each_result[max_index])

    print
    print "count of result : ", len(result_IOU_list)
    count = 0

    # for new_j in range(len(new_points)):
    #
    #     temp_list3 = []
    #     temp_list4 = []
    #     result_i = 0.0
    #     for new_each_data in new_points[new_j]:
    #
    #         temp_list3.append([new_each_data[0], new_each_data[2]])
    #         temp_list4.append([new_each_data[1], new_each_data[2]])
    #     if check_closed(temp_list3) == -1:
    #         temp_list1 = rs2.CalculateCentroid2D(temp_list3)
    #     if check_closed(temp_list4) == -1:
    #         temp_list2 = rs2.CalculateCentroid2D(temp_list4)
    #     if get_PolygonArea(temp_list3) > get_PolygonArea(temp_list4):
    #         checkValue = True
    #         result_i = get_PolygonArea(temp_list3)
    #     else:
    #         checkValue = False
    #         result_i = get_PolygonArea(temp_list4)
    #     if result_i < 1.0:
    #         print new_j, result_i
    for i in result_IOU_list:

        main = pcl.PointCloud()
        sub = pcl.PointCloud()
        main.from_list(original_data[i[0]])
        sub.from_list(new_points[i[1]])
        pcl.save(main, save_path+list_original[i[0]]+".pcd")
        pcl.save(sub, save_path+list_original[i[0]]+"_"+str(i[1])+".pcd")
        count = count + 1
        print list_original[i[0]], i

    # opoints = []
    # npoints = []
    # for i in range(len(original_points)):
    #     temp_list1 = []
    #     temp_list2 = []
    #     temp_list3 = []
    #     checkValue = True
    #     for j in original_points[i]:
    #         temp_list1.append([j[0], j[2]])
    #         temp_list2.append([j[1], j[2]])
    #
        # if check_closed(temp_list1) == -1:
        #     temp_list1 = rs2.CalculateCentroid2D(temp_list1)
        # if check_closed(temp_list2) == -1:
        #     temp_list2 = rs2.CalculateCentroid2D(temp_list2)
    #
        # if get_PolygonArea(temp_list1) > get_PolygonArea(temp_list2):
        #     checkValue = True
        #     opoints.append(temp_list1)
        # else:
        #     checkValue = False
        #     opoints.append(temp_list2)
    #
        # for j in new_points[i]:
        #     if checkValue:
        #         temp_list3.append([j[0], j[2]])
        #     else:
        #         temp_list3.append([j[1], j[2]])
        #
        # if check_closed(temp_list3) == -1:
        #     temp_list3 = rs2.CalculateCentroid2D(temp_list3)
        #
        # npoints.append(temp_list3)


    # for i in new_points:
    #     temp_list = []
    #     for j in i:
    #         temp_list.append([j[0], j[2]])
    #     if check_closed(temp_list) == -1:
    #         temp_list = rs2.CalculateCentroid2D(temp_list)
    #     npoints.append(temp_list)
    #
    # for i in range(len(opoints)):
    #     print i
    #
    #     # a = get_PolygonArea(opoints[i])
    #     # b = get_PolygonArea(npoints[i])
    #     # # print i
    #     IOU = get_IOU(opoints[i], npoints[i])
    #     # print "Area_a : ", a
    #     # print "Area_b : ",b
    #     print "IOU : ", IOU


    # new_points = [[[1.17154207089495, -0.658473605762648, 3.047840118408203], [2.85423922802842, -0.658409047928616, 3.0363399982452393], [2.85423922802842, -0.658409047928616, 0.03525486961007118], [1.17154207089495, -0.658473605762648, 0.03899608179926872], [1.17154207089495, -0.658473605762648, 3.047840118408203]], [[1.17232344394907, 3.10833391622898, 3.0554399490356445], [1.17154207089495, -0.658473605762648, 3.047840118408203], [1.17154207089495, -0.658473605762648, 0.03899608179926872], [1.17232344394907, 3.10833391622898, 0.01646059937775135], [1.17232344394907, 3.10833391622898, 3.0554399490356445]], [[1.17232344394907, 3.10833391622898, 0.01646059937775135], [2.85592963672819, 3.10498754810542, 0.01646059937775135], [2.85592963672819, 3.10498754810542, 3.0554399490356445], [1.17232344394907, 3.10833391622898, 3.0554399490356445], [1.17232344394907, 3.10833391622898, 0.01646059937775135]], [[2.85592963672819, 3.10498754810542, 0.01646059937775135], [2.85423922802842, -0.658409047928616, 0.03525486961007118], [2.85423922802842, -0.658409047928616, 3.0363399982452393], [2.85592963672819, 3.10498754810542, 3.0554399490356445], [2.85592963672819, 3.10498754810542, 0.01646059937775135]]]
    # new_points = [[[-0.0736667534394775, -0.792109886945326, 0.02443454973399639], [-0.0703359259474093, -0.948751631879418, 0.02952166646718979], [-0.0703359259474093, -0.948751631879418, 3.0423800945281982], [-0.0736667534394775, -0.792109886945326, 3.0496299266815186], [-0.0736667534394775, -0.792109886945326, 0.02443454973399639]], [[-0.0243317252695328, -3.11223151357283, 3.0621800422668457], [-0.0703359259474093, -0.948751631879418, 3.0423800945281982], [-0.0703359259474093, -0.948751631879418, 0.02952166646718979], [-0.0243317252695328, -3.11223151357283, 0.03738019987940788], [-0.0243317252695328, -3.11223151357283, 3.0621800422668457]], [[4.69940499681119, -3.11213494616376, 3.0621800422668457], [-0.0243317252695328, -3.11223151357283, 3.0621800422668457], [-0.0243317252695328, -3.11223151357283, 0.03738019987940788], [4.69940499681119, -3.11213494616376, 0.03738019987940788], [4.69940499681119, -3.11213494616376, 3.0621800422668457]], [[4.69711197662828, 3.10132797859425, 3.0554399490356445], [4.69940499681119, -3.11213494616376, 3.0621800422668457], [4.69940499681119, -3.11213494616376, 0.03738019987940788], [4.69711197662828, 3.10132797859425, 0.01646059937775135], [4.69711197662828, 3.10132797859425, 3.0554399490356445]], [[2.99053100234752, 3.10472001183641, 3.0554399490356445], [4.69711197662828, 3.10132797859425, 3.0554399490356445], [4.69711197662828, 3.10132797859425, 0.01646059937775135], [2.99053100234752, 3.10472001183641, 0.01646059937775135], [2.99053100234752, 3.10472001183641, 3.0554399490356445]], [[2.99053100234752, 3.10472001183641, 0.01646059937775135], [2.98952686704443, -0.790252950611448, 0.024747176095843315], [2.98952686704443, -0.790252950611448, 3.038594961166382], [2.99053100234752, 3.10472001183641, 3.0554399490356445], [2.99053100234752, 3.10472001183641, 0.01646059937775135]], [[2.85417986314639, -0.790574479280031, 3.0363399982452393], [2.98952686704443, -0.790252950611448, 3.038594961166382], [2.98952686704443, -0.790252950611448, 0.024747176095843315], [2.85417986314639, -0.790574479280031, 0.03525486961007118], [2.85417986314639, -0.790574479280031, 3.0363399982452393]], [[1.03899695814266, -0.794886605340243, 3.0378000736236572], [2.85417986314639, -0.790574479280031, 3.0363399982452393], [2.85417986314639, -0.790574479280031, 0.03525486961007118], [1.03899695814266, -0.794886605340243, 0.033170800656080246], [1.03899695814266, -0.794886605340243, 3.0378000736236572]], [[1.03671818059138, 3.10860344786449, 3.0554399490356445], [1.03899695814266, -0.794886605340243, 3.0378000736236572], [1.03899695814266, -0.794886605340243, 0.033170800656080246], [1.03671818059138, 3.10860344786449, 0.01646059937775135], [1.03671818059138, 3.10860344786449, 3.0554399490356445]], [[-4.69822532075788, 3.12000233212, 3.0554399490356445], [1.03671818059138, 3.10860344786449, 3.0554399490356445], [1.03671818059138, 3.10860344786449, 0.01646059937775135], [-4.69822532075788, 3.12000233212, 0.01646059937775135], [-4.69822532075788, 3.12000233212, 3.0554399490356445]], [[-4.69822532075788, 3.12000233212, 0.01646059937775135], [-4.69805035458894, -0.792217156192569, 0.036078501492738724], [-4.69805035458894, -0.792217156192569, 3.0480549335479736], [-4.69822532075788, 3.12000233212, 3.0554399490356445], [-4.69822532075788, 3.12000233212, 0.01646059937775135]], [[-0.0736667534394775, -0.792109886945326, 3.0496299266815186], [-4.69805035458894, -0.792217156192569, 3.0480549335479736], [-4.69805035458894, -0.792217156192569, 0.036078501492738724], [-0.0736667534394775, -0.792109886945326, 0.02443454973399639], [-0.0736667534394775, -0.792109886945326, 3.0496299266815186]]]

    # for i in new_points:
        # new_points_list = []
        # for j in i:
        #     new_points.append([j[0], j[2]])

    # test_points = [[3.0, 2.0], [3.8, 2.4], [3.2857142857142856, 3.4285714285714284], [2.0, 3.0], [2.0, 3.0],[3.0, 2.0]]
    # if check_closed(original_points) == -1:
    #     original_points = rs2.CalculateCentroid2D(original_points)
    #
    # if check_closed(new_points) == -1:
    #     new_points = rs2.CalculateCentroid2D(new_points)
    # a = get_PolygonArea(original_points)
    # b = get_PolygonArea(new_points)
    # # t = get_PolygonArea(test_points)
    # IOU = get_IOU(original_points, new_points)
    # print "Area_a : ", a
    # print "Area_b : ",b
    # # print "Area_t : ",t
    # print "IOU : ",IOU
    #

